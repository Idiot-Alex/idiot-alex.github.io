# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    schedule:
      # Runs everyday at 8:00 AM
      - cron: "0 8 * * *"

jobs:
  deploy:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
      with:
        submodules: true  # Fetch Hugo themes (true OR recursive)
        fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'
        extended: true

    - name: Build
      run: |
        hugo --gc --minify  --cleanDestinationDir --baseURL "${{ steps.pages.outputs.base_url }}/"

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.WORKFLOW_TOKEN }}
        publish_dir: ./public
  
  # # Build job
  # build:
  #   runs-on: ubuntu-latest
  #   env:
  #     HUGO_VERSION: 0.115.0
  #     extended: true
  #   steps:
  #     - name: Install Hugo CLI
  #       run: |
  #         wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
  #         && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
  #     - name: Install Dart Sass
  #       run: sudo snap install dart-sass
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #         fetch-depth: 0
  #     - name: Setup Pages
  #       id: pages
  #       uses: actions/configure-pages@v3
  #     - name: Install Node.js dependencies
  #       run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
  #     - name: Build with Hugo
  #       env:
  #         # For maximum backward compatibility with Hugo modules
  #         HUGO_ENVIRONMENT: production
  #         HUGO_ENV: production
  #       run: |
  #         hugo --gc --minify  --cleanDestinationDir --baseURL "${{ steps.pages.outputs.base_url }}/"          
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         path: ./public

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2